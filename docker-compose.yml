version: "3.8"

x-database-service:
  &database-config
    DB_SERVER_URL: database-service

x-config-service:
  &cloud-config
    CONFIG_SERVICE_URL: config-service
    ZIPKIN_URL: zipkin-service

x-generic-properties:
  &generic-properties
    DEBUG_FLAG: ${DEBUG_FLAG:-false}

networks:
  sn-network:
    name: sn-network
    driver: bridge

volumes:
  sn-database:
    name: sn-database
    driver: local
  sn-logs:
    name: sn-logs
    driver: local

services:
  database-service:
    image: postgres:alpine
    restart: unless-stopped
    networks:
      - sn-network
    volumes:
      - sn-database:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: database-service
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PSWD}

  discovery-service:
    image: discovery-service:latest
    ports:
      - 8761:8761
      - 7671:7671
    networks:
      - sn-network
    container_name: discovery-service
    environment:
      DEBUG_PORT: 7671
      <<: *generic-properties

  config-service:
    image: config-service:latest
    ports:
      - 9296:9296
      - 7276:7276
    networks:
      - sn-network
    depends_on:
      - discovery-service
    container_name: config-service
    environment:
      DEBUG_PORT: 7276
      DISCOVERY_SERVICE_URL: discovery-service
      CONFIG_REPO_URL: ${CONFIG_REPO_URL}
      <<: *generic-properties

  gateway-service:
    image: gateway-service:latest
    ports:
      - 9191:9191
      - 7171:7171
    networks:
      - sn-network
    depends_on:
      - discovery-service
      - config-service
    container_name: gateway-service
    environment:
      DEBUG_PORT: 7171
      <<: *cloud-config
      <<: *generic-properties

  auth-service:
    image: auth-service:latest
    ports:
      - 7000:7000
    networks:
      - sn-network
    volumes:
      - sn-logs:/service/logs
    depends_on:
      - discovery-service
      - config-service
      - gateway-service
      - database-service
    container_name: auth-service
    environment:
      DEBUG_PORT: 7000
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      <<: *cloud-config
      <<: *database-config
      <<: *generic-properties

  user-service:
    image: user-service:latest
    ports:
      - 7001:7001
    networks:
      - sn-network
    volumes:
      - sn-logs:/service/logs
    depends_on:
      - discovery-service
      - config-service
      - gateway-service
      - database-service
    container_name: user-service
    environment:
      DEBUG_PORT: 7001
      <<: *cloud-config
      <<: *database-config
      <<: *generic-properties

  post-service:
    image: post-service:latest
    ports:
      - 7002:7002
    networks:
      - sn-network
    volumes:
      - sn-logs:/service/logs
    depends_on:
      - discovery-service
      - config-service
      - gateway-service
      - database-service
    container_name: post-service
    environment:
      DEBUG_PORT: 7002
      <<: *cloud-config
      <<: *database-config
      <<: *generic-properties

  metrics-service:
    image: metrics-service:latest
    ports:
      - 9294:9294
      - 7274:7274
    networks:
      - sn-network
    depends_on:
      - discovery-service
      - config-service
    container_name: metrics-service
    environment:
      DEBUG_PORT: 7274
      <<: *cloud-config
      <<: *generic-properties

  zipkin-service:
    image: openzipkin/zipkin:latest
    ports:
      - 9411:9411
    networks:
      - sn-network
    container_name: zipkin-service

  elasticsearch-service:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - sn-network
    container_name: elasticsearch-service
    environment:
      discovery.type: single-node

  logstash-service:
    image: docker.elastic.co/logstash/logstash:7.16.2
    networks:
      - sn-network
    volumes:
      - sn-logs:/logs
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    container_name: logstash-service

  kibana-service:
    image: docker.elastic.co/kibana/kibana:7.16.2
    ports:
      - 5601:5601
    networks:
      - sn-network
    container_name: kibana-service
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch-service:9200
